#!/usr/bin/env bash

# This way you can customize which branches should be skipped when
# prepending commit message.
# Branches are defined in an array, separated by spaces.
# By default, main, master, and develop branches are skipped.
if [ -z "$BRANCHES_TO_SKIP" ]; then
  BRANCHES_TO_SKIP=(main master develop)
fi

# Get the current branch name
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

# Check if the current branch is excluded from prepending commit message
BRANCH_EXCLUDED=$(printf "%s\n" "${BRANCHES_TO_SKIP[@]}" | grep -c "^$BRANCH_NAME$")

# Check if the current branch name is already in the commit message
BRANCH_IN_COMMIT=$(grep -c "\[$BRANCH_NAME\]" $1)

# Prepend branch name to the commit message if not excluded and not already present
if [ -n "$BRANCH_NAME" ] && ! [[ $BRANCH_EXCLUDED -eq 1 ]] && ! [[ $BRANCH_IN_COMMIT -ge 1 ]]; then
  msg=$(cat $1)
  echo "[$BRANCH_NAME] - $msg" > "$1"
fi
